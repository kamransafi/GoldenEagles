#Scripts for calcu

#From terminal on local system: (make sure to be on MPI internet, use VPN)
#The file with all data (no missing values)

#scp /home/mahle68/ownCloud/Work/Projects/GE_ontogeny_of_soaring/R_files/alt_50_20_min_48_ind_static_temp_inlaready_wmissing_wks.rds enourani@raven.mpcdf.mpg.de:/#raven/u/enourani/
  
scp /home/enourani/ownCloud/Work/cluster_computing/GE_inla_static/alt_50_20_min_48_ind_static_inlaready_wmissing_wks.rds enourani@raven.mpcdf.mpg.de:/raven/u/enourani/
  
#coy over paradiso license
scp /home/mahle68/ownCloud/Work/cluster_computing/GE_inla_static/pardiso.lic enourani@raven.mpcdf.mpg.de:/raven/u/enourani/
  
#ssh to cluster
  
# if not on MPI network: 
ssh gate.mpcdf.mpg.de
ssh raven.mpcdf.mpg.de


#if on MPI network:
ssh enourani@raven.mpcdf.mpg.de


#load R
module purge
module load gcc/10 R/4.2 gdal gsl/2.4

#open R in new screen
screen -S inlaGE
R

#to detach screen anytime, ctr+A,D
#to go back to the scree: screen -r myScreenName
#list of screens: screen -list
#kill screen: screen -S myScreenName -X quit 

######in R

setwd("INLA_GE")

library(tidyverse)
library(INLA)
inla.setOption(pardiso.license = "pardiso.lic")

#open file.
all_data <- readRDS("alt_50_20_min_48_ind_static_temp_inlaready_wmissing_wks.rds")

#-----------------------------------------------------------------------------------------------
# STEP 1: MODEL WITH NO MISSING VALUES. predictors: dem, tri, temperature

#define variables and formula
formulaM <- used ~ -1 + 
  dem_100_z * weeks_since_emig_n_z +
  TRI_100_z * weeks_since_emig_n_z + 
  month_temp_z +
  f(stratum, model = "iid", 
    hyper = list(theta = list(initial = log(1e-6),fixed = T))) +
  f(ind1, dem_100_z, model = "iid",
    hyper=list(theta=list(initial=log(1),fixed=F,prior="pc.prec",param=c(3,0.05)))) + 
  f(ind2, TRI_100_z,  model = "iid",
    hyper=list(theta=list(initial=log(1),fixed=F,prior="pc.prec",param=c(3,0.05))))

mean.beta <- 0
prec.beta <- 1e-4 

#run model
(b <- Sys.time())
M_marti_c <- inla(formulaM, family = "Poisson", 
                  control.fixed = list(
                    mean = mean.beta,
                    prec = list(default = prec.beta)),
                  data = all_data, 
                  num.threads = 20,
                  control.predictor = list(compute = TRUE, link = 1), 
                  control.compute = list(openmp.strategy = "huge", config = TRUE, cpo = T))
Sys.time() - b  #with random effects on 20 threads: 24.5 minutes

#visualize coefficients.. doesnt work
#png("inla_3coeff_no_missig.png", width = 7, height = 7, units = "in", res = 300)
#Efxplot(M_marti_c) 
#dev.off()


#extract info
mean(M_marti_c$cpo$cpo) #0.7437256


M_marti_c$mlik #gaussian: -440519.3

# extract info for coefficient plots

# posterior means of coefficients
graph <- as.data.frame(summary(M_marti_c)$fixed)
colnames(graph)[which(colnames(graph)%in%c("0.025quant","0.975quant"))]<-c("Lower","Upper")
colnames(graph)[which(colnames(graph)%in%c("0.05quant","0.95quant"))]<-c("Lower","Upper")
colnames(graph)[which(colnames(graph)%in%c("mean"))]<-c("Estimate")

#graph$Model<-i
graph$Factor <- rownames(graph)

saveRDS(graph, file = "graph_Marti_c.rds")

#-----------------------------------------------------------------------------------------------
# STEP 2: TRY THE MODEL WITH NO SLOPE TPI
formulaM2 <- used ~ -1 + 
  dem_100_z * weeks_since_emig_n_z +
  TRI_100_z * weeks_since_emig_n_z + 
  f(stratum, model = "iid", 
    hyper = list(theta = list(initial = log(1e-6),fixed = T))) +
  f(ind1, dem_100_z, model = "iid",
    hyper=list(theta=list(initial=log(1),fixed=F,prior="pc.prec",param=c(3,0.05)))) + 
  f(ind2, TRI_100_z,  model = "iid",
    hyper=list(theta=list(initial=log(1),fixed=F,prior="pc.prec",param=c(3,0.05))))

mean.beta <- 0
prec.beta <- 1e-4 

#run model
(b <- Sys.time())
M2 <- inla(formulaM2, family = "Poisson", 
           control.fixed = list(
             mean = mean.beta,
             prec = list(default = prec.beta)),
           data = all_data, 
           num.threads = 20,
           control.predictor = list(compute = TRUE, link = 1), 
           control.compute = list(openmp.strategy = "huge", config = TRUE, cpo = T))
Sys.time() - b  #with random effects on 20 threads: 26.5 min

#extract info

eval <- data.frame(CPO = mean(M2$cpo$cpo),
                   Mlik = as.numeric(M2$mlik[,1][2])) 

saveRDS(eval, file = "eval_M2.rds")

mean(M2$cpo$cpo) #0.743725

M2$mlik #gaussian: -440492.8

# extract info for coefficient plots

# posterior means of coefficients
graph <- as.data.frame(summary(M2)$fixed)
colnames(graph)[which(colnames(graph)%in%c("0.025quant","0.975quant"))]<-c("Lower","Upper")
colnames(graph)[which(colnames(graph)%in%c("0.05quant","0.95quant"))]<-c("Lower","Upper")
colnames(graph)[which(colnames(graph)%in%c("mean"))]<-c("Estimate")

#graph$Model<-i
graph$Factor <- rownames(graph)

saveRDS(graph, file = "graph_M2.rds")

#-----------------------------------------------------------------------------------------------
# STEP 3: TRY THE MODEL WITH MISSING VALUES FOR PREDICTIONS
new_data <- readRDS("alt_50_20_min_48_ind_static_inlaready_wmissing_wks.rds")

#define variables and formula
formula_pred <- used ~ -1 + 
  dem_100_z * weeks_since_emig_n_z +
  TRI_100_z * weeks_since_emig_n_z +
  f(stratum, model = "iid", 
    hyper = list(theta = list(initial = log(1e-6),fixed = T))) +
  f(ind1, dem_100_z, model = "iid",
    hyper=list(theta=list(initial=log(1),fixed=F,prior="pc.prec",param=c(3,0.05)))) + 
  f(ind2, TRI_100_z,  model = "iid",
    hyper=list(theta=list(initial=log(1),fixed=F,prior="pc.prec",param=c(3,0.05))))

mean.beta <- 0
prec.beta <- 1e-4 

#run model

(b <- Sys.time())
M_pred <- inla(formula_pred, family = "Poisson", 
               control.fixed = list(
                 mean = mean.beta,
                 prec = list(default = prec.beta)),
               data = new_data, 
               num.threads = 20,
               control.predictor = list(compute = TRUE), #this means that NA values will be predicted.
               control.compute = list(openmp.strategy = "huge", config = TRUE, cpo = T),
               inla.mode="experimental")
Sys.time() - b #500 missing values: 2.47618 mins


#save results
eval <- data.frame(CPO = mean(M_pred$cpo$cpo, na.rm = T), #0.95 
                   Mlik = as.numeric(M_pred$mlik[,1][2])) #-161036.6

saveRDS(eval, file = "eval_M_pred.rds")

# extract info for coefficient plots

# posterior means of coefficients
graph <- as.data.frame(summary(M_pred)$fixed)
colnames(graph)[which(colnames(graph)%in%c("0.025quant","0.975quant"))]<-c("Lower","Upper")
colnames(graph)[which(colnames(graph)%in%c("0.05quant","0.95quant"))]<-c("Lower","Upper")
colnames(graph)[which(colnames(graph)%in%c("mean"))]<-c("Estimate")

#graph$Model<-i
graph$Factor <- rownames(graph)

saveRDS(graph, file = "graph_M_pred.rds")

#extract info to make prediction plots

used_na <- which(is.na(new_data$used))

#extract information for rows that had NAs as response variables
preds <- data.frame(dem_100_z = new_data[is.na(new_data$used) ,"dem_100_z"],
                    TRI_100_z = new_data[is.na(new_data$used) ,"TRI_100_z"],
                    weeks_since_emig_n_z = new_data[is.na(new_data$used) ,"weeks_since_emig_n_z"],
                    preds = M_pred$summary.fitted.values[used_na,"mean"]) %>% 
  mutate(prob_pres = exp(preds)/(1+exp(preds))) #this should be between 0-1


saveRDS(preds, file = "preds_M_preds.rds")


#extract info for ind-specific variation

summ_rndm <- M_pred$summary.random

saveRDS(summ_rndm, file = "rnd_coeff_M_preds.rds")



## copy files back to local machine.. from local terminal
scp enourani@raven.mpcdf.mpg.de:/raven/u/enourani/INLA_GE/graph_M_pred.rds /home/mahle68/ownCloud/Work/cluster_computing/GE_inla_static/results

scp enourani@raven.mpcdf.mpg.de:/raven/u/enourani/INLA_GE/preds_M_preds.rds /home/mahle68/ownCloud/Work/cluster_computing/GE_inla_static/results

scp enourani@raven.mpcdf.mpg.de:/raven/u/enourani/INLA_GE/rnd_coeff_M_preds.rds /home/mahle68/ownCloud/Work/cluster_computing/GE_inla_static/results

scp enourani@raven.mpcdf.mpg.de:/raven/u/enourani/INLA_GE/Rplots.pdf /home/mahle68/ownCloud/Work/cluster_computing/GE_inla_static/results



